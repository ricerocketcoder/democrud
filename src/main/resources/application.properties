server.port=9080
security.user.password=password
spring.application.name=democrud
security.oauth2.resource.id=democrud


logging.level=info
logging.level.com.gary.demo.crud=debug


# ===============================
# = Tomcat Deployment Specific
# ===============================
endpoints.jmx.domain=com.gary.demo.crud.app
spring.jmx.default-domabin=com.gary.demo.crud.app

# ===============================
# = APPLICATION DATA SOURCE
# ===============================
# H2 for local testing use
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.url=jdbc:h2:mem:test;MODE=Oracle;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1



# ===============================
# = SWAGGER
# ===============================
com.gary.demo.crud.swagger.group=${spring.application.name}
com.gary.demo.crud.swagger.docs-title=Gary's Demo
com.gary.demo.crud.swagger.docs-description=A Spring Boot app to demonstrate CRUD
com.gary.demo.crud.swagger.support-url=http://www.google.ca
com.gary.demo.crud.swagger.support-email=gary.ma@gmail.com
com.gary.demo.crud.swagger.rest.api-version=v1
management.security.enabled=false



# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true
#Generate DDL script (use the follow properties with Hibernate 5.2+ and JPA 2.1+
spring.jpa.properties.javax.persistence.schema-generation.database.action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.sql-load-script-source=prep.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=target/create.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=target/drop.sql


# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
spring.jpa.hibernate.use-new-id-generator-mappings=true



